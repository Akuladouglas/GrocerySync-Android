buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.4.2'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
    maven {
        url "http://maven.hq.couchbase.com:8081/nexus/content/repositories/releases/"
    }
}

dependencies {

    compile 'com.android.support:support-v4:13.0.0'

    compile 'com.couchbase.cblite:CBLite:0.7'
    compile 'com.couchbase.cblite:CBLiteEktorp:0.7'
    compile 'com.couchbase.cblite:CBLiteJavascript:0.7'

}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 16
    }
}

// /begin .so hack - this is a hack until gradle supports dependencies on .so objects
// the hack is described here:
//      http://stackoverflow.com/questions/16683775/include-so-library-in-apk-in-android-studio
// I had to modify it slightly to change buildDir -> getProjectDir()

task copyNativeLibs(type: Copy) {
    from(new File(project(':GrocerySync-Android').getProjectDir(), 'native-libs')) { include '**/*.so' }
    into new File(buildDir, 'native-libs')
}

tasks.withType(Compile) { compileTask -> compileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniDir new File(buildDir, 'native-libs')
}

// /end .so hack